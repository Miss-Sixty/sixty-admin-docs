(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[111],{8494:(a,n,s)=>{"use strict";s.r(n),s.d(n,{data:()=>t});const t={key:"v-7aeaedfd",path:"/hooks/toRouter.html",title:"跳转指定页面",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"引入",slug:"引入",children:[]},{level:2,title:"参数",slug:"参数",children:[]}],filePathRelative:"hooks/toRouter.md",git:{updatedTime:1627551465e3,contributors:[{name:"张喜贺",email:"zhangxihe@bornmega.com",commits:1}]}}},1702:(a,n,s)=>{"use strict";s.r(n),s.d(n,{default:()=>e});const t=(0,s(6252).uE)('<h1 id="跳转指定页面" tabindex="-1"><a class="header-anchor" href="#跳转指定页面" aria-hidden="true">#</a> 跳转指定页面</h1><h2 id="引入" tabindex="-1"><a class="header-anchor" href="#引入" aria-hidden="true">#</a> 引入</h2><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>toRouter(name, params, query)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>click<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> toRouter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@/hooks&quot;</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="参数" tabindex="-1"><a class="header-anchor" href="#参数" aria-hidden="true">#</a> 参数</h2><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>name</td><td>跳转路由的名字</td><td>string</td><td>-</td></tr><tr><td>params</td><td>传递的 params 参数</td><td>object</td><td>-</td></tr><tr><td>query</td><td>传递的 query 参数</td><td>object</td><td>-</td></tr></tbody></table><div class="custom-container warning"><p class="custom-container-title">注意</p><p>如果使用 query 传参则需要在接收参数时使用 JSON.parse(route.query.data) 来接收参数。这样做的目的是为了避免参数的数字类型被浏览器格式化为字符串类型。</p></div>',6),e={render:function(a,n){return t}}}}]);