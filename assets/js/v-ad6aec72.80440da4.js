(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[86],{3876:(n,a,s)=>{"use strict";s.r(a),s.d(a,{data:()=>t});const t={key:"v-ad6aec72",path:"/hooks/dialogVisible.html",title:"打开子组件弹窗",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"引入",slug:"引入",children:[]},{level:2,title:"父组件返回值",slug:"父组件返回值",children:[]},{level:2,title:"子组件方法",slug:"子组件方法",children:[]}],filePathRelative:"hooks/dialogVisible.md",git:{updatedTime:1627551989e3,contributors:[{name:"张喜贺",email:"zhangxihe@bornmega.com",commits:1}]}}},7639:(n,a,s)=>{"use strict";s.r(a),s.d(a,{default:()=>p});const t=(0,s(6252).uE)('<h1 id="打开子组件弹窗" tabindex="-1"><a class="header-anchor" href="#打开子组件弹窗" aria-hidden="true">#</a> 打开子组件弹窗</h1><div class="custom-container warning"><p class="custom-container-title">注意</p><p>此方法大多用在子组件是弹窗的情况。</p></div><h2 id="引入" tabindex="-1"><a class="header-anchor" href="#引入" aria-hidden="true">#</a> 引入</h2><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>// 父组件\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>child-view</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>child<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> dialogVisible <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@/hooks&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> refName<span class="token operator">:</span> child<span class="token punctuation">,</span> showDialog <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">dialogVisible</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n// 子组件\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>我是子组件<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token function">showDialog</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span>type</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span>type<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h2 id="父组件返回值" tabindex="-1"><a class="header-anchor" href="#父组件返回值" aria-hidden="true">#</a> 父组件返回值</h2><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>refName</td><td>子组件 Dom 的名字</td><td>string</td><td>-</td></tr><tr><td>showDialog</td><td>子组件的方法</td><td>function</td><td>-</td></tr></tbody></table><h2 id="子组件方法" tabindex="-1"><a class="header-anchor" href="#子组件方法" aria-hidden="true">#</a> 子组件方法</h2><div class="custom-container warning"><p class="custom-container-title">注意</p><p>子组件里必须要有 showDialog 函数，否则父组件会因找不到子组件的方法而报错。</p></div><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>showDialog</td><td>父组件会执行的方法</td><td>function</td><td>-</td></tr></tbody></table>',9),p={render:function(n,a){return t}}}}]);