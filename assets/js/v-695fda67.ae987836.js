(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[740],{2451:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>t});const t={key:"v-695fda67",path:"/hooks/validateForm.html",title:"表单验证 & 重置表单",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"引入",slug:"引入",children:[]},{level:2,title:"返回值",slug:"返回值",children:[]}],filePathRelative:"hooks/validateForm.md",git:{updatedTime:1627564027e3,contributors:[{name:"xihe",email:"40154623+Miss-Sixty@users.noreply.github.com",commits:1},{name:"张喜贺",email:"zhangxihe@bornmega.com",commits:1}]}}},2238:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>p});const t=(0,a(6252).uE)('<h1 id="表单验证-重置表单" tabindex="-1"><a class="header-anchor" href="#表单验证-重置表单" aria-hidden="true">#</a> 表单验证 &amp; 重置表单</h1><h2 id="引入" tabindex="-1"><a class="header-anchor" href="#引入" aria-hidden="true">#</a> 引入</h2><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> validateForm <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@/hooks&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> formRef<span class="token punctuation">,</span> validateFormChange<span class="token punctuation">,</span> resetFieldsForm <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">validateForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">validateFormChange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">resetFieldsForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="返回值" tabindex="-1"><a class="header-anchor" href="#返回值" aria-hidden="true">#</a> 返回值</h2><table><thead><tr><th>返回</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td>formRef</td><td>form 表单的 Dom</td><td>VDom</td></tr><tr><td>validateFormChange</td><td>验证表单是否成功的方法</td><td>function</td></tr><tr><td>resetFieldsForm</td><td>form 表单重置</td><td>string</td></tr></tbody></table><div class="custom-container tip"><p class="custom-container-title">提示</p><p>可重复创建多个函数且不冲突，只要更改名字即可。如下：</p></div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">const</span> <span class="token punctuation">{</span>\n  formRef<span class="token operator">:</span> form1<span class="token punctuation">,</span>\n  validateFormChange<span class="token operator">:</span> validateFormChange1<span class="token punctuation">,</span>\n  resetFieldsForm<span class="token operator">:</span> resetFieldsForm1<span class="token punctuation">,</span>\n<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">validateForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>\n  formRef<span class="token operator">:</span> form2<span class="token punctuation">,</span>\n  validateFormChange<span class="token operator">:</span> validateFormChange2<span class="token punctuation">,</span>\n  resetFieldsForm<span class="token operator">:</span> resetFieldsForm2<span class="token punctuation">,</span>\n<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">validateForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>',7),p={render:function(n,s){return t}}}}]);