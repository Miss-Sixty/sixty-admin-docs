(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[14],{2756:(e,d,c)=>{"use strict";c.r(d),c.d(d,{data:()=>a});const a={key:"v-78fbe5e8",path:"/guide/component.html",title:"组件",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"全局组件",slug:"全局组件",children:[]},{level:2,title:"局部组件",slug:"局部组件",children:[]}],filePathRelative:"guide/component.md",git:{updatedTime:1627266168e3,contributors:[{name:"xihe",email:"zhangxihe@bornmega.com",commits:1}]}}},8347:(e,d,c)=>{"use strict";c.r(d),c.d(d,{default:()=>t});const a=(0,c(6252).uE)('<h1 id="组件" tabindex="-1"><a class="header-anchor" href="#组件" aria-hidden="true">#</a> 组件</h1><h2 id="全局组件" tabindex="-1"><a class="header-anchor" href="#全局组件" aria-hidden="true">#</a> 全局组件</h2><div class="custom-container tip"><p class="custom-container-title">说明</p><p>全局组件无需手动引入，框架会自动注册</p></div><p>全局组件存放在 <code>@/components/</code> 目录下，需要注意各个组件按文件夹区分。每个组件的文件夹内至少保留一个文件名为 <code>index</code> 的组件入口，例如 <code>index.vue</code> 。</p><p>组件必须设置 <code>name</code> 并保证其唯一，自动注册会将组件的 <code>name</code> 设为组件名，可参考 <code>SvgIcon</code> 组件写法。虽然文件夹名称和组件 <code>name</code> 无关联，但建议与 <code>name</code> 保持一致。</p><h2 id="局部组件" tabindex="-1"><a class="header-anchor" href="#局部组件" aria-hidden="true">#</a> 局部组件</h2><p>建议局部组件跟随页面走，你可以在每个页面文件夹下，建立一个 <code>components</code> 文件夹用于存放局部组件。</p><p>按照这个规则，后续不管是修改还是调试，代码相对会比较清晰。</p>',8),t={render:function(e,d){return a}}}}]);