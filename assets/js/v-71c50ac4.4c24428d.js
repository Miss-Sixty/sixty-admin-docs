(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[748],{9586:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>p});const p={key:"v-71c50ac4",path:"/guide/router.html",title:"路由和侧边栏",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"配置项",slug:"配置项",children:[]},{level:2,title:"嵌套路由",slug:"嵌套路由",children:[]},{level:2,title:"全局前置守卫",slug:"全局前置守卫",children:[]},{level:2,title:"全局后置守卫",slug:"全局后置守卫",children:[]}],filePathRelative:"guide/router.md",git:{updatedTime:1627293786e3,contributors:[{name:"xihe",email:"zhangxihe@bornmega.com",commits:2}]}}},1348:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>e});const p=(0,a(6252).uE)('<h1 id="路由和侧边栏" tabindex="-1"><a class="header-anchor" href="#路由和侧边栏" aria-hidden="true">#</a> 路由和侧边栏</h1><p>路由和侧边栏是组织起一个后台应用的关键骨架。</p><p>本项目侧边栏和路由是绑定在一起的，整个页面路由是后端控制返回数据，通过 <code>@/router/permission.js</code> (路由拦截) 来处理路由的动态添加和处理侧边栏。如果前端路由未找到对应的页面信息则会跳转到 404 页面。所以这样就需要在配置路由的时候遵循一些约定的规则。</p><h2 id="配置项" tabindex="-1"><a class="header-anchor" href="#配置项" aria-hidden="true">#</a> 配置项</h2><p>首先我们了解一下本项目配置路由时提供了哪些配置项。</p><div class="custom-container tip"><p class="custom-container-title">提示</p><p>所有的导航配置项均放在路由的 meta 对象中</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>meta <span class="token operator">:</span> <span class="token punctuation">{</span>\n    hidden<span class="token operator">:</span> <span class="token boolean">true</span>                <span class="token comment">//如果设置为 true，项目将不会显示在侧边栏中（默认为 false）</span>\n    auth<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;admin&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;editor&#39;</span><span class="token punctuation">]</span>    <span class="token comment">//该路由进入的权限，支持多个权限叠加，只要满足一个，即可进入</span>\n                                <span class="token comment">//如果用户没有该权限，则该路由不会在侧边栏导航中展示</span>\n    title<span class="token operator">:</span>  <span class="token string">&#39;title&#39;</span>             <span class="token comment">//该路由在侧边栏导航和面包屑导航中展示的标题</span>\n    icon<span class="token operator">:</span> <span class="token string">&#39;icon-x&#39;</span>              <span class="token comment">//侧边栏导航中显示的图标（只支持svg图标）</span>\n    activeMenu<span class="token operator">:</span> <span class="token string">&#39;/news/list&#39;</span><span class="token punctuation">,</span>   <span class="token comment">//当路由设置了该属性，则会高亮相对应的侧边栏，一般会搭配 hidden: true 一起使用</span>\n    breadcrumb<span class="token operator">:</span> <span class="token boolean">true</span>            <span class="token comment">//该路由是否在面包屑导航中展示（默认为 true）</span>\n    link<span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>                   <span class="token comment">//内嵌网页链接，如果要开启内嵌网页，component 需要设置为框架提供的 layoue/iframe.vue</span>\n    copyright<span class="token operator">:</span> <span class="token boolean">false</span>            <span class="token comment">//该路由是否显示底部版权信息，比全局设置里的 showCopyright 优先级高，不设置则继承全局里的设置</span>\n\n    <span class="token constant">TODO</span>\n    <span class="token comment">// noCache: true                如果设置为true，页面将不会被缓存（默认为false）</span>\n  <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>示例：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> Layout <span class="token keyword">from</span> <span class="token string">&quot;@/layout&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  path<span class="token operator">:</span> <span class="token string">&quot;/permission&quot;</span><span class="token punctuation">,</span>\n  component<span class="token operator">:</span> Layout<span class="token punctuation">,</span>\n  redirect<span class="token operator">:</span> <span class="token string">&quot;/permission/page&quot;</span><span class="token punctuation">,</span>\n  name<span class="token operator">:</span> <span class="token string">&quot;Permission&quot;</span><span class="token punctuation">,</span>\n  meta<span class="token operator">:</span> <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">&quot;权限验证&quot;</span><span class="token punctuation">,</span>\n    icon<span class="token operator">:</span> <span class="token string">&quot;settings-5-fill&quot;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  children<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      path<span class="token operator">:</span> <span class="token string">&quot;/permission/page&quot;</span><span class="token punctuation">,</span>\n      name<span class="token operator">:</span> <span class="token string">&quot;permissionPage&quot;</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&quot;@/views/permission&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      meta<span class="token operator">:</span> <span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token string">&quot;这是测试页&quot;</span><span class="token punctuation">,</span>\n        hidden<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        activeMenu<span class="token operator">:</span> <span class="token string">&quot;/permission&quot;</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h2 id="嵌套路由" tabindex="-1"><a class="header-anchor" href="#嵌套路由" aria-hidden="true">#</a> 嵌套路由</h2><p>如果需要嵌套多层路由，则可以引入 <code>EmptyLayout</code> 组件，查看代码可以看到这是一个空白的 layout 页面。</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span> <span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>为什么需要这个呢？因为嵌套路由生成出来的导航栏目也是嵌套结构的，但导航栏目里的模块页面一般是不需要嵌套的，所以除了顶级路由需要设置 <code>component: Layout</code> ，嵌套有 <code>children</code> 属性的子项路由，均可设置 <code>component: EmptyLayout</code> 。当然如果你的页面确实有嵌套展示的需求，可不按照这种方式操作。</p><h2 id="全局前置守卫" tabindex="-1"><a class="header-anchor" href="#全局前置守卫" aria-hidden="true">#</a> 全局前置守卫</h2><p>路由的前置导航守卫是框架实现路由跳转的核心，在前置守卫里会接管侧边栏导航路由生成、无效路由跳转 404 页面等处理。所以理解框架的前置守卫处理逻辑，对业务开发或框架二次开发有很大帮助。</p><h2 id="全局后置守卫" tabindex="-1"><a class="header-anchor" href="#全局后置守卫" aria-hidden="true">#</a> 全局后置守卫</h2><p>页面标题设置被放在了后置守卫里面，这样做是因为当点击跳转页面的时候，页面还没跳过去但是页面标题已经改变。这就会出现一个问题，就是当我们阻止跳转后，此时的页面还是原来的页面，但是页面名称已经变为跳转后的名称。为了避免这个问题，我们觉得放在后置守卫中是比较合适的选择。</p>',17),e={render:function(n,s){return p}}}}]);